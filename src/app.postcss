/* Write your global styles here, in PostCSS syntax */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom global styles */
html {
  scroll-behavior: smooth;
}

body {
  @apply transition-colors duration-300 ease-in-out;
  font-feature-settings: "liga", "kern";
  text-rendering: optimizeLegibility;
  cursor: default;
}

/* Modern card hover effects */
.hover-card {
  @apply transition-all duration-300 hover:shadow-xl hover:-translate-y-1;
}

/* Animated underline for links */
.animated-underline {
  position: relative;
}

.animated-underline::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  @apply bg-primary;
  transition: width 0.3s ease;
}

.animated-underline:hover::after {
  width: 100%;
}

/* Animate on scroll utility classes */
.fade-in {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Button animations */
.btn {
  @apply transition-all duration-300;
}

/* Line clamp utilities */
.line-clamp-1 {
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Fix for page animations */
.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Gradient text */
.gradient-text {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary;
}

/* Sticky positioning utility with offset */
.sticky-top-24 {
  position: sticky;
  top: 6rem;
}

/* Interactive cursor effects */
.custom-cursor {
  position: fixed;
  width: 4rem;
  height: 4rem;
  background-color: white;
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: difference;
  transform: translate(-50%, -50%);
  transition: width 0.2s ease, height 0.2s ease, opacity 0.2s ease;
}

.cursor-active {
  width: 48px;
  height: 48px;
  opacity: 0.8;
}

/* Advanced hover effects */
.hover-3d {
  transition: transform 0.3s ease;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.hover-3d:hover {
  transform: translateZ(10px) rotateX(2deg) rotateY(2deg);
}

/* Text reveal animations */
.reveal-text {
  position: relative;
  overflow: hidden;
  display: block;
}

.reveal-text::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  @apply bg-base-300;
  transform: translateX(0);
  transition: transform 0.6s cubic-bezier(0.83, 0, 0.17, 1);
}

.reveal-text.visible::after {
  transform: translateX(101%);
}

/* Staggered animations for children */
.stagger-children > * {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.stagger-children.visible > *:nth-child(1) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.05s;
}

.stagger-children.visible > *:nth-child(2) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.1s;
}

.stagger-children.visible > *:nth-child(3) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.15s;
}

.stagger-children.visible > *:nth-child(4) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.2s;
}

.stagger-children.visible > *:nth-child(5) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.25s;
}

.stagger-children.visible > *:nth-child(n+6) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.3s;
}

/* Text scramble effect */
.scramble-text {
  display: inline-block;
}

/* Glitch effect */
.glitch {
  position: relative;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  @apply text-red-500;
  animation: glitch-animation 1s infinite;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  transform: translate(-2px, -2px);
}

.glitch::after {
  @apply text-blue-500;
  animation: glitch-animation 2s infinite;
  clip-path: polygon(0 60%, 100% 60%, 100% 100%, 0 100%);
  transform: translate(2px, 2px);
}

@keyframes glitch-animation {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-3px, 3px);
  }
  40% {
    transform: translate(-3px, -3px);
  }
  60% {
    transform: translate(3px, 3px);
  }
  80% {
    transform: translate(3px, -3px);
  }
  100% {
    transform: translate(0);
  }
}

/* Magnetic buttons */
.magnetic-btn {
  transition: transform 0.2s ease;
}

/* Marquee animation */
.marquee {
  white-space: nowrap;
  overflow: hidden;
}

.marquee-content {
  display: inline-block;
  animation: marquee 20s linear infinite;
}

@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

/* Floating animations */
.float {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

/* Parallax layers */
.parallax-container {
  overflow: hidden;
  position: relative;
}

.parallax-layer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: transform 0.2s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Spotlight effect */
.spotlight {
  position: relative;
  overflow: hidden;
}

.spotlight::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 60%);
  transform: scale(0);
  transition: transform 0.5s ease;
  pointer-events: none;
}

.spotlight:hover::before {
  transform: scale(1);
}

/* Image reveal effect */
.image-reveal {
  position: relative;
  overflow: hidden;
}

.image-reveal img {
  transform: scale(1.2);
  transition: transform 1.5s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.image-reveal.visible img {
  transform: scale(1);
}

.image-reveal::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  @apply bg-primary;
  transform: translateX(0);
  transition: transform 1s cubic-bezier(0.77, 0, 0.175, 1);
}

.image-reveal.visible::after {
  transform: translateX(101%);
}
